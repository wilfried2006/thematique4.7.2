//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LamyThematique.Infrastructure.Authentication.MaboReferenceClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Identification", ConfigurationName="MaboReferenceClient.IdentificationPortType")]
    public interface IdentificationPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#AuthentificationUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string AuthentificationUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#AuthentificationUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> AuthentificationUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DisconnectionUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string DisconnectionUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DisconnectionUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> DisconnectionUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RegistrationUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RegistrationUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RegistrationUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RegistrationUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ModificationUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ModificationUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ModificationUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ModificationUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetInformationUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetInformationUsers(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetInformationUsers", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetInformationUsersAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#InitPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string InitPassword(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#InitPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> InitPasswordAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ChangePassword(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ChangePassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ChangePasswordAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetAccessCodeFromToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetAccessCodeFromToken(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetAccessCodeFromToken", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetAccessCodeFromTokenAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#IsPasswordValid", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string IsPasswordValid(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#IsPasswordValid", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> IsPasswordValidAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdatePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpdatePassword(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdatePassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpdatePasswordAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUserInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetUserInformation(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUserInformation", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetUserInformationAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConsultationService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConsultationService(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConsultationService", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConsultationServiceAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UnsubscribeUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UnsubscribeUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UnsubscribeUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UnsubscribeUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateDemoUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateDemoUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateDemoUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateDemoUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ValidateDemoUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ValidateDemoUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ValidateDemoUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ValidateDemoUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetInformationPortal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetInformationPortal(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetInformationPortal", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetInformationPortalAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#FirstConnectionUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string FirstConnectionUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#FirstConnectionUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> FirstConnectionUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUsersList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetUsersList(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUsersList", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetUsersListAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateUserList(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserList", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateUserListAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateUserList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpdateUserList(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateUserList", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpdateUserListAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DeleteUserList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string DeleteUserList(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DeleteUserList", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> DeleteUserListAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetParentUserInfos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetParentUserInfos(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetParentUserInfos", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetParentUserInfosAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateSiebelDemoUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateSiebelDemoUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateSiebelDemoUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateSiebelDemoUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#SearchUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string SearchUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#SearchUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> SearchUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateOnlineOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateOnlineOrder(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateOnlineOrder", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateOnlineOrderAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConfirmOnlineOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConfirmOnlineOrder(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConfirmOnlineOrder", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConfirmOnlineOrderAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpgradeRights", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpgradeRights(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpgradeRights", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpgradeRightsAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GenerateToken(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateToken", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GenerateTokenAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CheckTestUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CheckTestUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CheckTestUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CheckTestUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ValidateTestUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ValidateTestUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ValidateTestUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ValidateTestUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortals", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetPortals(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortals", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetPortalsAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalFunctions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetPortalFunctions(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalFunctions", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetPortalFunctionsAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateUserToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GenerateUserToken(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateUserToken", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GenerateUserTokenAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetConnectedUserInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetConnectedUserInformation(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetConnectedUserInformation", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetConnectedUserInformationAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateConnectedUserInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpdateConnectedUserInformation(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateConnectedUserInformation", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpdateConnectedUserInformationAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateConnectedUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpdateConnectedUserPassword(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateConnectedUserPassword", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpdateConnectedUserPasswordAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#VerifyToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string VerifyToken(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#VerifyToken", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> VerifyTokenAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserFromEnterpriseAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateUserFromEnterpriseAccess(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserFromEnterpriseAccess", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateUserFromEnterpriseAccessAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUsersForAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetUsersForAdmin(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUsersForAdmin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetUsersForAdminAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUserInfosForAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetUserInfosForAdmin(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetUserInfosForAdmin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetUserInfosForAdminAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateUserInfosByAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string UpdateUserInfosByAdmin(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#UpdateUserInfosByAdmin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> UpdateUserInfosByAdminAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DeleteUserByAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string DeleteUserByAdmin(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#DeleteUserByAdmin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> DeleteUserByAdminAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserByAdmin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string CreateUserByAdmin(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#CreateUserByAdmin", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> CreateUserByAdminAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#AcceptTermsOfUse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string AcceptTermsOfUse(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#AcceptTermsOfUse", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> AcceptTermsOfUseAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#IsEmailUnique", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string IsEmailUnique(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#IsEmailUnique", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> IsEmailUniqueAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConfirmPartnerUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string ConfirmPartnerUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#ConfirmPartnerUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> ConfirmPartnerUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RegisterFreeUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RegisterFreeUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RegisterFreeUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RegisterFreeUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RenewalDemoUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string RenewalDemoUser(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#RenewalDemoUser", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> RenewalDemoUserAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPurchaseOrderInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetPurchaseOrderInformation(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPurchaseOrderInformation", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetPurchaseOrderInformationAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetPortalCountries(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalCountries", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetPortalCountriesAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateExtranetToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GenerateExtranetToken(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GenerateExtranetToken", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GenerateExtranetTokenAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetPortalInfo(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#GetPortalInfo", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetPortalInfoAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#MAIL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string MAIL(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#MAIL", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> MAILAsync(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#WSDL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string WSDL(string xmlFlow);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Identification#IdentificationServer#WSDL", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> WSDLAsync(string xmlFlow);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IdentificationPortTypeChannel : LamyThematique.Infrastructure.Authentication.MaboReferenceClient.IdentificationPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdentificationPortTypeClient : System.ServiceModel.ClientBase<LamyThematique.Infrastructure.Authentication.MaboReferenceClient.IdentificationPortType>, LamyThematique.Infrastructure.Authentication.MaboReferenceClient.IdentificationPortType {
        
        public IdentificationPortTypeClient() {
        }
        
        public IdentificationPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdentificationPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentificationPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentificationPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AuthentificationUser(string xmlFlow) {
            return base.Channel.AuthentificationUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> AuthentificationUserAsync(string xmlFlow) {
            return base.Channel.AuthentificationUserAsync(xmlFlow);
        }
        
        public string DisconnectionUser(string xmlFlow) {
            return base.Channel.DisconnectionUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> DisconnectionUserAsync(string xmlFlow) {
            return base.Channel.DisconnectionUserAsync(xmlFlow);
        }
        
        public string RegistrationUser(string xmlFlow) {
            return base.Channel.RegistrationUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> RegistrationUserAsync(string xmlFlow) {
            return base.Channel.RegistrationUserAsync(xmlFlow);
        }
        
        public string ModificationUser(string xmlFlow) {
            return base.Channel.ModificationUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ModificationUserAsync(string xmlFlow) {
            return base.Channel.ModificationUserAsync(xmlFlow);
        }
        
        public string GetInformationUsers(string xmlFlow) {
            return base.Channel.GetInformationUsers(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetInformationUsersAsync(string xmlFlow) {
            return base.Channel.GetInformationUsersAsync(xmlFlow);
        }
        
        public string InitPassword(string xmlFlow) {
            return base.Channel.InitPassword(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> InitPasswordAsync(string xmlFlow) {
            return base.Channel.InitPasswordAsync(xmlFlow);
        }
        
        public string ChangePassword(string xmlFlow) {
            return base.Channel.ChangePassword(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ChangePasswordAsync(string xmlFlow) {
            return base.Channel.ChangePasswordAsync(xmlFlow);
        }
        
        public string GetAccessCodeFromToken(string xmlFlow) {
            return base.Channel.GetAccessCodeFromToken(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetAccessCodeFromTokenAsync(string xmlFlow) {
            return base.Channel.GetAccessCodeFromTokenAsync(xmlFlow);
        }
        
        public string IsPasswordValid(string xmlFlow) {
            return base.Channel.IsPasswordValid(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> IsPasswordValidAsync(string xmlFlow) {
            return base.Channel.IsPasswordValidAsync(xmlFlow);
        }
        
        public string UpdatePassword(string xmlFlow) {
            return base.Channel.UpdatePassword(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePasswordAsync(string xmlFlow) {
            return base.Channel.UpdatePasswordAsync(xmlFlow);
        }
        
        public string GetUserInformation(string xmlFlow) {
            return base.Channel.GetUserInformation(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetUserInformationAsync(string xmlFlow) {
            return base.Channel.GetUserInformationAsync(xmlFlow);
        }
        
        public string ConsultationService(string xmlFlow) {
            return base.Channel.ConsultationService(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ConsultationServiceAsync(string xmlFlow) {
            return base.Channel.ConsultationServiceAsync(xmlFlow);
        }
        
        public string UnsubscribeUser(string xmlFlow) {
            return base.Channel.UnsubscribeUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UnsubscribeUserAsync(string xmlFlow) {
            return base.Channel.UnsubscribeUserAsync(xmlFlow);
        }
        
        public string CreateDemoUser(string xmlFlow) {
            return base.Channel.CreateDemoUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateDemoUserAsync(string xmlFlow) {
            return base.Channel.CreateDemoUserAsync(xmlFlow);
        }
        
        public string ValidateDemoUser(string xmlFlow) {
            return base.Channel.ValidateDemoUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ValidateDemoUserAsync(string xmlFlow) {
            return base.Channel.ValidateDemoUserAsync(xmlFlow);
        }
        
        public string GetInformationPortal(string xmlFlow) {
            return base.Channel.GetInformationPortal(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetInformationPortalAsync(string xmlFlow) {
            return base.Channel.GetInformationPortalAsync(xmlFlow);
        }
        
        public string FirstConnectionUser(string xmlFlow) {
            return base.Channel.FirstConnectionUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> FirstConnectionUserAsync(string xmlFlow) {
            return base.Channel.FirstConnectionUserAsync(xmlFlow);
        }
        
        public string GetUsersList(string xmlFlow) {
            return base.Channel.GetUsersList(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetUsersListAsync(string xmlFlow) {
            return base.Channel.GetUsersListAsync(xmlFlow);
        }
        
        public string CreateUserList(string xmlFlow) {
            return base.Channel.CreateUserList(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserListAsync(string xmlFlow) {
            return base.Channel.CreateUserListAsync(xmlFlow);
        }
        
        public string UpdateUserList(string xmlFlow) {
            return base.Channel.UpdateUserList(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserListAsync(string xmlFlow) {
            return base.Channel.UpdateUserListAsync(xmlFlow);
        }
        
        public string DeleteUserList(string xmlFlow) {
            return base.Channel.DeleteUserList(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserListAsync(string xmlFlow) {
            return base.Channel.DeleteUserListAsync(xmlFlow);
        }
        
        public string GetParentUserInfos(string xmlFlow) {
            return base.Channel.GetParentUserInfos(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetParentUserInfosAsync(string xmlFlow) {
            return base.Channel.GetParentUserInfosAsync(xmlFlow);
        }
        
        public string CreateSiebelDemoUser(string xmlFlow) {
            return base.Channel.CreateSiebelDemoUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateSiebelDemoUserAsync(string xmlFlow) {
            return base.Channel.CreateSiebelDemoUserAsync(xmlFlow);
        }
        
        public string SearchUser(string xmlFlow) {
            return base.Channel.SearchUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> SearchUserAsync(string xmlFlow) {
            return base.Channel.SearchUserAsync(xmlFlow);
        }
        
        public string CreateOnlineOrder(string xmlFlow) {
            return base.Channel.CreateOnlineOrder(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateOnlineOrderAsync(string xmlFlow) {
            return base.Channel.CreateOnlineOrderAsync(xmlFlow);
        }
        
        public string ConfirmOnlineOrder(string xmlFlow) {
            return base.Channel.ConfirmOnlineOrder(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmOnlineOrderAsync(string xmlFlow) {
            return base.Channel.ConfirmOnlineOrderAsync(xmlFlow);
        }
        
        public string UpgradeRights(string xmlFlow) {
            return base.Channel.UpgradeRights(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpgradeRightsAsync(string xmlFlow) {
            return base.Channel.UpgradeRightsAsync(xmlFlow);
        }
        
        public string GenerateToken(string xmlFlow) {
            return base.Channel.GenerateToken(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GenerateTokenAsync(string xmlFlow) {
            return base.Channel.GenerateTokenAsync(xmlFlow);
        }
        
        public string CheckTestUser(string xmlFlow) {
            return base.Channel.CheckTestUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CheckTestUserAsync(string xmlFlow) {
            return base.Channel.CheckTestUserAsync(xmlFlow);
        }
        
        public string ValidateTestUser(string xmlFlow) {
            return base.Channel.ValidateTestUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ValidateTestUserAsync(string xmlFlow) {
            return base.Channel.ValidateTestUserAsync(xmlFlow);
        }
        
        public string GetPortals(string xmlFlow) {
            return base.Channel.GetPortals(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalsAsync(string xmlFlow) {
            return base.Channel.GetPortalsAsync(xmlFlow);
        }
        
        public string GetPortalFunctions(string xmlFlow) {
            return base.Channel.GetPortalFunctions(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalFunctionsAsync(string xmlFlow) {
            return base.Channel.GetPortalFunctionsAsync(xmlFlow);
        }
        
        public string GenerateUserToken(string xmlFlow) {
            return base.Channel.GenerateUserToken(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GenerateUserTokenAsync(string xmlFlow) {
            return base.Channel.GenerateUserTokenAsync(xmlFlow);
        }
        
        public string GetConnectedUserInformation(string xmlFlow) {
            return base.Channel.GetConnectedUserInformation(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetConnectedUserInformationAsync(string xmlFlow) {
            return base.Channel.GetConnectedUserInformationAsync(xmlFlow);
        }
        
        public string UpdateConnectedUserInformation(string xmlFlow) {
            return base.Channel.UpdateConnectedUserInformation(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpdateConnectedUserInformationAsync(string xmlFlow) {
            return base.Channel.UpdateConnectedUserInformationAsync(xmlFlow);
        }
        
        public string UpdateConnectedUserPassword(string xmlFlow) {
            return base.Channel.UpdateConnectedUserPassword(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpdateConnectedUserPasswordAsync(string xmlFlow) {
            return base.Channel.UpdateConnectedUserPasswordAsync(xmlFlow);
        }
        
        public string VerifyToken(string xmlFlow) {
            return base.Channel.VerifyToken(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> VerifyTokenAsync(string xmlFlow) {
            return base.Channel.VerifyTokenAsync(xmlFlow);
        }
        
        public string CreateUserFromEnterpriseAccess(string xmlFlow) {
            return base.Channel.CreateUserFromEnterpriseAccess(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserFromEnterpriseAccessAsync(string xmlFlow) {
            return base.Channel.CreateUserFromEnterpriseAccessAsync(xmlFlow);
        }
        
        public string GetUsersForAdmin(string xmlFlow) {
            return base.Channel.GetUsersForAdmin(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetUsersForAdminAsync(string xmlFlow) {
            return base.Channel.GetUsersForAdminAsync(xmlFlow);
        }
        
        public string GetUserInfosForAdmin(string xmlFlow) {
            return base.Channel.GetUserInfosForAdmin(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetUserInfosForAdminAsync(string xmlFlow) {
            return base.Channel.GetUserInfosForAdminAsync(xmlFlow);
        }
        
        public string UpdateUserInfosByAdmin(string xmlFlow) {
            return base.Channel.UpdateUserInfosByAdmin(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserInfosByAdminAsync(string xmlFlow) {
            return base.Channel.UpdateUserInfosByAdminAsync(xmlFlow);
        }
        
        public string DeleteUserByAdmin(string xmlFlow) {
            return base.Channel.DeleteUserByAdmin(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserByAdminAsync(string xmlFlow) {
            return base.Channel.DeleteUserByAdminAsync(xmlFlow);
        }
        
        public string CreateUserByAdmin(string xmlFlow) {
            return base.Channel.CreateUserByAdmin(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserByAdminAsync(string xmlFlow) {
            return base.Channel.CreateUserByAdminAsync(xmlFlow);
        }
        
        public string AcceptTermsOfUse(string xmlFlow) {
            return base.Channel.AcceptTermsOfUse(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> AcceptTermsOfUseAsync(string xmlFlow) {
            return base.Channel.AcceptTermsOfUseAsync(xmlFlow);
        }
        
        public string IsEmailUnique(string xmlFlow) {
            return base.Channel.IsEmailUnique(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> IsEmailUniqueAsync(string xmlFlow) {
            return base.Channel.IsEmailUniqueAsync(xmlFlow);
        }
        
        public string ConfirmPartnerUser(string xmlFlow) {
            return base.Channel.ConfirmPartnerUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> ConfirmPartnerUserAsync(string xmlFlow) {
            return base.Channel.ConfirmPartnerUserAsync(xmlFlow);
        }
        
        public string RegisterFreeUser(string xmlFlow) {
            return base.Channel.RegisterFreeUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> RegisterFreeUserAsync(string xmlFlow) {
            return base.Channel.RegisterFreeUserAsync(xmlFlow);
        }
        
        public string RenewalDemoUser(string xmlFlow) {
            return base.Channel.RenewalDemoUser(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> RenewalDemoUserAsync(string xmlFlow) {
            return base.Channel.RenewalDemoUserAsync(xmlFlow);
        }
        
        public string GetPurchaseOrderInformation(string xmlFlow) {
            return base.Channel.GetPurchaseOrderInformation(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetPurchaseOrderInformationAsync(string xmlFlow) {
            return base.Channel.GetPurchaseOrderInformationAsync(xmlFlow);
        }
        
        public string GetPortalCountries(string xmlFlow) {
            return base.Channel.GetPortalCountries(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalCountriesAsync(string xmlFlow) {
            return base.Channel.GetPortalCountriesAsync(xmlFlow);
        }
        
        public string GenerateExtranetToken(string xmlFlow) {
            return base.Channel.GenerateExtranetToken(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GenerateExtranetTokenAsync(string xmlFlow) {
            return base.Channel.GenerateExtranetTokenAsync(xmlFlow);
        }
        
        public string GetPortalInfo(string xmlFlow) {
            return base.Channel.GetPortalInfo(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> GetPortalInfoAsync(string xmlFlow) {
            return base.Channel.GetPortalInfoAsync(xmlFlow);
        }
        
        public string MAIL(string xmlFlow) {
            return base.Channel.MAIL(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> MAILAsync(string xmlFlow) {
            return base.Channel.MAILAsync(xmlFlow);
        }
        
        public string WSDL(string xmlFlow) {
            return base.Channel.WSDL(xmlFlow);
        }
        
        public System.Threading.Tasks.Task<string> WSDLAsync(string xmlFlow) {
            return base.Channel.WSDLAsync(xmlFlow);
        }
    }
}
